<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  
	//게시물 개수
	public int getCount(String field, String query) throws ClassNotFoundException, SQLException;
	//전체 게시물
	public List<Notice> getNotices(int page, String field, String query) throws ClassNotFoundException, SQLException;
	//게시물 삭제
	public int delete(String seq) throws ClassNotFoundException, SQLException;
	//게시물 수정
	public int update(Notice notice) throws ClassNotFoundException, SQLException;
	//게시물 상세
	public Notice getNotice(String seq) throws ClassNotFoundException, SQLException;
	//게시물 입력
	public int insert(Notice n) throws ClassNotFoundException, SQLException; 
    
    mapper 사용 동기화
    1. namespace 이름  dao interface == mapper namespace
    2. dao interface 함수명과 == mapper id 값
    -->
<mapper namespace="dao.NoticeDao">
	<!--  
	  DTO parameter 가 아닌 경우 
	  1. Map 사용  (key ,value)
	  2. param1  , param2 .....  (parameterType 생략)
	  
	  -parameter 1 개 (생략)
	  -parameter 2 개 (DTO 없다면 hashMap)
	  
	  KEY POINT
	  parameter 1개 생략 : #{value} >> param1(x) 안되요 
	  parameter 2개 이상 : getCount(String field , String query)
	  1.순서 
	  >String field >> param1
	  >String query >> param2
	
	-->
	<select id="getCount" resultType="Integer">
		SELECT COUNT(*) CNT 
		FROM NOTICES 
		WHERE ${param1} LIKE '%${param2}%'
	</select>
	<!-- public List<Notice> getNotices(int page, String field, String query) 
	    int srow = 1 + (page-1)*5;
		int erow = 5 + (page-1)*5; 
		
		"SELECT * FROM";
		"(SELECT ROWNUM NUM, N.* FROM (SELECT * FROM NOTICES WHERE "+field+" LIKE ? ORDER BY REGDATE DESC) N)";
		"WHERE NUM BETWEEN ? AND ?";
	
	   
	-->
	<select id="getNotices"  resultType="vo.Notice">
		  SELECT * FROM
		           (SELECT ROWNUM NUM, N.* 
		           FROM 
		           (SELECT * FROM NOTICES WHERE ${param2} LIKE '%${param3}%' ORDER BY REGDATE DESC) N)
		  WHERE NUM BETWEEN 1 + (#{param1}-1)*5 AND  5 + (#{param1}-1)*5
   </select>
   
   <!-- public Notice getNotice(String seq) -->
   <select id="getNotice" resultType="vo.Notice">
   		SELECT seq,title,writer,content,regdate,hit,filesrc,filesrc2 
   		FROM NOTICES 
   		WHERE SEQ=#{seq}
   </select>
   
   
   <!-- public int delete(String seq)
        parameter 1개 생략 (param1 안되요  x)
    -->
   <delete id="delete">
   		DELETE NOTICES WHERE SEQ=#{seq}
   </delete>
   
   <!-- public int update(Notice notice) 
        파일업로드 : 
        파일수정 : null, null
        한개수정 : null, 1.jpg
        두개수정 : 1.jpg , 2.jpg        
   -->
   <update id="update" parameterType="vo.Notice">
   	  UPDATE NOTICES 
   	  SET TITLE=#{title}, 
   	      CONTENT=#{content}, 
   	      FILESRC= #{fileSrc,jdbcType=VARCHAR} , <!-- 아무값도 오지 않으면 null사용  -->
   	      FILESRC2=#{fileSrc2,jdbcType=VARCHAR} 
   	  WHERE SEQ=#{seq}
   </update>
   
   <!-- public int insert(Notice n) 
        selectKey 강제 .....
        parameterType="vo.Notice" 생략 ...
    -->
    <insert id="insert">
    	<selectKey order="BEFORE" keyProperty="seq" resultType="String">
    		SELECT MAX(TO_NUMBER(SEQ))+1 FROM NOTICES
    	</selectKey>
	    	INSERT INTO NOTICES(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC , FILESRC2) 
	    	VALUES(#{seq}, #{title}, #{content}, #{writer}, SYSDATE, 0, #{fileSrc,jdbcType=VARCHAR},#{fileSrc2,jdbcType=VARCHAR} )
    </insert>
</mapper>





